name: 08 - Using Variables

env:
  WORKFLOW_VAR: 'I am a workflow env var'
  OVERWRITTEN: 'I will be overwritten'
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

on:
  push:
  workflow_dispatch:

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'I am a job env var'
      OVERWRITTEN: 'I have been overwritten at the job level'
    steps:
      - name: Print Env Variables
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: ${{ env.STEP_VAR2 }}"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten: ${{ env.OVERWRITTEN }}"
        env:
          STEP_VAR: 'I am a step env var'
          STEP_VAR2: 'I am another step var'

      - name: Overwrite Job Variable
        run: |
          echo "Step env var: ${{ env.OVERWRITTEN }}"
        env:
          OVERWRITTEN: 'I have been overwritten at the step level'

  echo2:
    runs-on: ubuntu-latest
    steps:
    - name: Print Variables
      run: |
        echo "Repo Var: ${{ vars.REPOSITORY_VAR }}"
    
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Print Prod Variables
      run: |
        echo "Repo Var: ${{ vars.REPOSITORY_VAR }}"
        echo "Environment Var: ${{ vars.TARGET_VAR }}"
        echo "Overwritten Var: ${{ vars.OVERWRITTEN_VAR }}"
        

  echo-undefined:
    runs-on: ubuntu-latest
    steps:
    - name: Print Undefined Variables
      run: |
        echo "Repo Var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"

